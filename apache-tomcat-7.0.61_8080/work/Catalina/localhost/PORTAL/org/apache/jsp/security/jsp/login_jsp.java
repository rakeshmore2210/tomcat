/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.61
 * Generated at: 2022-11-28 10:03:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.security.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import fission.ui.servlet.HTTPHeaderUtil;
import fission.utility.Util;
import java.util.UUID;
import edit.services.config.ServicesConfig;
import edit.services.ResourceUtil;
import org.owasp.encoder.Encode;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String cookieValue = UUID.randomUUID().toString();
	Cookie c = new Cookie("sid", cookieValue);
	c.setPath(""+request.getContextPath()+"/");
	c.setMaxAge(-1);
	c.setHttpOnly(true);
	if("true".equals(ResourceUtil.getProperty("pas.ssl.enable")))
		c.setSecure(true);
	response.addCookie(c);

	String targetTransaction = (String) request.getAttribute("targetTransaction");
	String targetAction = (String) request.getAttribute("targetAction");

	String message = "";
	if (request.getParameter("auth-error") != null && request.getParameter("auth-error").equals("true"))
	{
		message = "Please check username or password."; 
	}
	if(request.getParameter("timeoutMessage")!=null&&request.getParameter("timeoutMessage").equals("true"))
	{
		 //message=  "Session Timed Out.";
		 message=ServicesConfig.getProperty("spring.timeoutmessage");
	}
    String clientLogoPath = request.getContextPath() + "/customerResources/images/";

    String clientLogo = clientLogoPath + ServicesConfig.getProperty("ClientImages.LoginPageImage");
    HTTPHeaderUtil.addHeader(request, response);
   
   	response.addHeader( "X-XSS-Protection", "1; mode=block");
	response.addHeader( "X-Content-Type-Options", "nosniff" );
	response.addHeader( "Cache-Control", "private; max-age=1800");

	String version = System.getProperty("MajorVersion");
	String build = System.getProperty("Build");
    String revision = System.getProperty("Revision");
	String release = System.getProperty("Release");
	
	String builtOnDateTime = System.getProperty("BuiltOnDateTime");
	if (builtOnDateTime != null) {
		builtOnDateTime = builtOnDateTime.replace("_", " ");
	}

	String versionInfo = " v " + release;
	if(System.getProperty("ExternalReleaseName")!=null){
		versionInfo=System.getProperty("ExternalReleaseName");
	}
	String buildInfo = " Build " + build;
	
	String builtOn = "Built On " + builtOnDateTime;
	

      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html lang=\"en-US\">\r\n");
      out.write("  <head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <!-- Allow installing the app to the homescreen -->\r\n");
      out.write("    <meta name=\"mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("\t<title>MAJESCO-PAS</title>\r\n");
      out.write("\t\r\n");
      out.write("\t<link rel=\"icon\" href=\"");
      out.print(request.getContextPath());
      out.write("/html5/lib/Sphinx/style/image/favicon.ico\" type=\"image/x-icon\" id=\"favicon\" />\r\n");
      out.write("\t<link rel=\"preload\" as=\"font\" crossorigin=\"crossorigin\" type=\"font/woff\" href=\"");
      out.print(request.getContextPath());
      out.write("/html5/lib/Sphinx/style/fonts/Roboto-Regular.woff\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/html5/lib/Sphinx/style/css/font-awesome.min.css\" type=\"text/css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/html5/lib/Sphinx/style/css/vendors.css\" type=\"text/css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/html5/lib/Sphinx/style/css/style.css\" type=\"text/css\">\r\n");
      out.write("\t\r\n");
      out.write("    <!-- Open Sans Font -->\r\n");
      out.write("\t  <script type=\"text/javascript\">\r\n");
      out.write("\t\t\tvar contextPath = '");
      out.print(request.getContextPath());
      out.write("';\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\tvar lastLoginTime=''; \r\n");
      out.write("\t\t\tvar showLabelError;\r\n");
      out.write("\t\t\tvar workerId;\r\n");
      out.write("\t\t\tvar loginMessage = '");
      out.print(message);
      out.write("' ;\r\n");
      out.write("\t\t\tvar versionInfo = \"");
      out.print(Encode.forHtmlContent(versionInfo));
      out.write("\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar buildInfo = '");
      out.print(buildInfo);
      out.write("' ;\r\n");
      out.write("\t\t\tvar builtOn = '");
      out.print(builtOn);
      out.write("' ;\r\n");
      out.write("\t\t\tfunction generateUUID() {\r\n");
      out.write("\t\t\t\tvar d = new Date().getTime();\r\n");
      out.write("\t\t\t\tvar uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n");
      out.write("\t\t\t\t\tvar r = (d + Math.random()*16)%16 | 0;\r\n");
      out.write("\t\t\t\t\td = Math.floor(d/16);\r\n");
      out.write("\t\t\t\t\treturn (c=='x' ? r : (r&0x3|0x8)).toString(16);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\treturn uuid;\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tvar createCookie = function(name, value, days) {\r\n");
      out.write("\t\t\t\tvar expires;\r\n");
      out.write("\t\t\t\tif (days) {\r\n");
      out.write("\t\t\t\t\tvar date = new Date();\r\n");
      out.write("\t\t\t\t\tdate.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n");
      out.write("\t\t\t\t\texpires = \"\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\texpires = \"\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tdocument.cookie = name + \"=\" + value + expires + \"; path=\"+contextPath+\"/\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tfunction getCookie(c_name) {\r\n");
      out.write("\t\t\t\tif (document.cookie.length > 0) {\r\n");
      out.write("\t\t\t\t\tc_start = document.cookie.indexOf(c_name + \"=\");\r\n");
      out.write("\t\t\t\t\tif (c_start != -1) {\r\n");
      out.write("\t\t\t\t\t\tc_start = c_start + c_name.length + 1;\r\n");
      out.write("\t\t\t\t\t\tc_end = document.cookie.indexOf(\";\", c_start);\r\n");
      out.write("\t\t\t\t\t\tif (c_end == -1) {\r\n");
      out.write("\t\t\t\t\t\t\tc_end = document.cookie.length;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\treturn unescape(document.cookie.substring(c_start, c_end));\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treturn \"\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <noscript>If you're seeing this message, that means <strong>JavaScript has been disabled on your browser</strong>, please <strong>enable JS</strong> to make this app work.</noscript>\r\n");
      out.write("                ");

                if("yes".equalsIgnoreCase(ServicesConfig.getProperty("saml.sso.active"))){
                
      out.write("\r\n");
      out.write("                <div id=\"app\" class=\"container-fluid\">\r\n");
      out.write("                <div id=\"content\" class=\"content\" style=\"height:100vh\">\r\n");
      out.write("                <div class=\"error-code-403\">\r\n");
      out.write("                                <div class=\"error-403\">&nbsp;</div>\r\n");
      out.write("                                <div class=\"error-403-text\">\r\n");
      out.write("                                <div class=\"\">\r\n");
      out.write("                                                <h1 class=\"error-403-heading\">403</h1>\r\n");
      out.write("                                                <div class=\"error-403-msg-text\">Sorry, you don't have access to this page <br /> \r\n");
      out.write("                                                \r\n");
      out.write("                                                <br /> \r\n");
      out.write("                                </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("     </div>\r\n");
      out.write("                </div>\r\n");
      out.write("     </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                }
                else {
                
      out.write("\r\n");
      out.write("                <div id=\"loginapp\"></div>\r\n");
      out.write("                                <!-- Don't add any assets here! -->\r\n");
      out.write("                                <script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/html5/lib/Sphinx/vendors.js\" charset=\"utf-8\"></script>\r\n");
      out.write("                                <script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/html5/lib/Sphinx/mainLogin.js\" charset=\"utf-8\"></script>\r\n");
      out.write("                ");

                }
                
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
